using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Digger
{
    class Terrain : ICreature
    {
        public CreatureCommand Act(int x, int y)
        {
            return new CreatureCommand() { DeltaX = 0, DeltaY = 0};
        }

        public bool DeadInConflict(ICreature conflictedObject)
        {
            return true;
        }

        public int GetDrawingPriority()
        {
            return 1;
        }

        public string GetImageFileName()
        {
            return "Terrain.png";
        }
    }
    class Player : ICreature
    {
        public CreatureCommand Act(int x, int y)
        {
            switch(Game.KeyPressed)
            {
                case System.Windows.Forms.Keys.Up:
                    if(y - 1 >= 0) return new CreatureCommand() { DeltaX = 0, DeltaY = -1 }; else return new CreatureCommand() { DeltaX = 0, DeltaY = 0 };
                    break;
                case System.Windows.Forms.Keys.Down:
                    if (y + 1 < Game.MapHeight) return new CreatureCommand() { DeltaX = 0, DeltaY = 1 }; else return new CreatureCommand() { DeltaX = 0, DeltaY = 0 };
                    break;
                case System.Windows.Forms.Keys.Left:
                    if (x - 1 >= 0) return new CreatureCommand() { DeltaX = -1, DeltaY = 0 }; else return new CreatureCommand() { DeltaX = 0, DeltaY = 0 };
                    break;
                case System.Windows.Forms.Keys.Right:
                    if (x + 1 < Game.MapWidth) return new CreatureCommand() { DeltaX = 1, DeltaY = 0 }; else return new CreatureCommand() { DeltaX = 0, DeltaY = 0 };
                    break;
                default: return new CreatureCommand() { DeltaX = 0, DeltaY = 0 };
            }

        }

        public bool DeadInConflict(ICreature conflictedObject)
        {
            CreatureCommand a = conflictedObject.Act(0, 0);
            return false;
        }

        public int GetDrawingPriority()
        {
            return 0;
        }

        public string GetImageFileName()
        {
            return "Digger.png";
        }
    }
}
